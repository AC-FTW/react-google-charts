(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{"./src/docs/Animations/AnimationsInCharts.mdx":function(e,n,t){"use strict";t.r(n);var a=t("./node_modules/react/index.js"),i=t.n(a),o=t("./node_modules/@mdx-js/tag/dist/index.js"),r=t("./node_modules/docz/dist/index.m.js"),s=t("./node_modules/react-component-component/es/index.js"),c=t("./src/index.tsx"),m=function(e){return e},l=function(){return[["Age","Weight"],[m(8),m(12)],[m(4),m(5.5)],[m(1),m(14)],[m(4),m(5)],[m(3),m(3.5)],[m(6),m(7)]]};function d(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}n.default=function(e){var n=e.components;d(e,["components"]);return i.a.createElement(o.MDXTag,{name:"wrapper",components:n},i.a.createElement(o.MDXTag,{name:"h2",components:n,props:{id:"animate-on-startup"}},i.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"h2",props:{"aria-hidden":!0,href:"#animate-on-startup"}},i.a.createElement(o.MDXTag,{name:"span",components:n,parentName:"a",props:{className:"icon-link"}},"#")),"Animate on Startup"),i.a.createElement(r.d,{__position:0,__code:"<Chart\n  width={'600px'}\n  height={'400px'}\n  chartType=\"ScatterChart\"\n  loader={<div>Loading Chart</div>}\n  data={[\n    ['Age', 'Weight'],\n    [8, 12],\n    [4, 5.5],\n    [11, 14],\n    [4, 5],\n    [3, 3.5],\n    [6.5, 7],\n  ]}\n  options={{\n    title: 'Age vs. Weight comparison',\n    hAxis: { title: 'Age', minValue: 0, maxValue: 15 },\n    vAxis: { title: 'Weight', minValue: 0, maxValue: 15 },\n    legend: 'none',\n    animation: {\n      startup: true,\n      easing: 'linear',\n      duration: 1500,\n    },\n    enableInteractivity: false,\n  }}\n  chartEvents={[\n    {\n      eventName: 'animationfinish',\n      callback: () => {\n        console.log('Animation Finished')\n      },\n    },\n  ]}\n  rootProps={{ 'data-testid': '1' }}\n/>"},i.a.createElement(c.a,{width:"600px",height:"400px",chartType:"ScatterChart",loader:i.a.createElement("div",null,"Loading Chart"),data:[["Age","Weight"],[8,12],[4,5.5],[11,14],[4,5],[3,3.5],[6.5,7]],options:{title:"Age vs. Weight comparison",hAxis:{title:"Age",minValue:0,maxValue:15},vAxis:{title:"Weight",minValue:0,maxValue:15},legend:"none",animation:{startup:!0,easing:"linear",duration:1500},enableInteractivity:!1},chartEvents:[{eventName:"animationfinish",callback:function(){console.log("Animation Finished")}}],rootProps:{"data-testid":"1"}})),i.a.createElement(o.MDXTag,{name:"h2",components:n,props:{id:"animate-with-data-change"}},i.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"h2",props:{"aria-hidden":!0,href:"#animate-with-data-change"}},i.a.createElement(o.MDXTag,{name:"span",components:n,parentName:"a",props:{className:"icon-link"}},"#")),"Animate with data change"),i.a.createElement(s.a,{initialState:{chartData:l()},didMount:function(e){setInterval(function(){e.setState({chartData:l()})},3e3)}},function(e){return i.a.createElement(c.a,{style:{width:500,height:300,background:"blue"},width:"500px",height:"300px",chartType:"ScatterChart",loader:i.a.createElement("div",null,"Loading Chart"),data:e.state.chartData,options:{chartArea:{width:"85%",height:"85%"},colors:["#8e0152","#276419"],pointSize:10,animation:{duration:2e3,easing:"out",startup:!0},vAxis:{viewWindow:{max:-10,min:100}},hAxis:{viewWindow:{max:100,min:-10}},legend:{position:"none"},enableInteractivity:!1},rootProps:{"data-testid":"1"}})}))}}}]);