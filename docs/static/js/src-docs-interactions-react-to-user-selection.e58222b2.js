(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{"./src/docs/Interactions/ReactToUserSelection.mdx":function(e,n,t){"use strict";t.r(n);var a=t("./node_modules/react/index.js"),r=t.n(a),o=t("./node_modules/@mdx-js/tag/dist/index.js"),c=t("./node_modules/docz/dist/index.m.js"),l=t("./src/index.tsx");function s(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=[],a=!0,r=!1,o=void 0;try{for(var c,l=e[Symbol.iterator]();!(a=(c=l.next()).done)&&(t.push(c.value),!n||t.length!==n);a=!0);}catch(e){r=!0,o=e}finally{try{a||null==l.return||l.return()}finally{if(r)throw o}}return t}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}function i(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}n.default=function(e){var n=e.components;i(e,["components"]);return r.a.createElement(o.MDXTag,{name:"wrapper",components:n},r.a.createElement(o.MDXTag,{name:"h2",components:n,props:{id:"simple-example"}},r.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"h2",props:{"aria-hidden":!0,href:"#simple-example"}},r.a.createElement(o.MDXTag,{name:"span",components:n,parentName:"a",props:{className:"icon-link"}},"#")),"Simple example"),r.a.createElement(c.d,{__position:0,__code:"<Chart\n  chartType=\"ScatterChart\"\n  data={[['x', 'dogs'], [0, 0], [1, 10], [2, 23], [3, 17], [4, 18], [5, 9]]}\n  chartEvents={[\n    {\n      eventName: 'select',\n      callback: ({ chartWrapper }) => {\n        const chart = chartWrapper.getChart()\n        const selection = chart.getSelection()\n        if (selection.length === 1) {\n          const [selectedItem] = selection\n          const dataTable = chartWrapper.getDataTable()\n          const { row, column } = selectedItem\n          alert(\n            'You selected : ' +\n              JSON.stringify({\n                row,\n                column,\n                value: dataTable.getValue(row, column),\n              }),\n            null,\n            2,\n          )\n        }\n        console.log(selection)\n      },\n    },\n  ]}\n/>"},r.a.createElement(l.a,{chartType:"ScatterChart",data:[["x","dogs"],[0,0],[1,10],[2,23],[3,17],[4,18],[5,9]],chartEvents:[{eventName:"select",callback:function(e){var n=e.chartWrapper,t=n.getChart().getSelection();if(1===t.length){var a=s(t,1)[0],r=n.getDataTable(),o=a.row,c=a.column;alert("You selected : "+JSON.stringify({row:o,column:c,value:r.getValue(o,c)}),null,2)}console.log(t)}}]})))}}}]);